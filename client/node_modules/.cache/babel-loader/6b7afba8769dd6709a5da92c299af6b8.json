{"ast":null,"code":"var _jsxFileName = \"/Users/huizehuang/Downloads/ArtsMuseum-master/client/src/components/SingleImage.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/SingleImage.css\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\nimport SingleImageInfo from './SingleImageInfo';\nexport default class SingleImage extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n\n    this.state = {\n      imageInfoDiv: \"\",\n      recImagesDiv: []\n    }; // Any instance method should be binded here\n\n    this.fetchImages = this.fetchImages.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchImages();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.imageID !== prevProps.match.params.imageID) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages() {\n    fetch(\"http://localhost:8081/image/\" + this.props.match.params.imageID, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageInfoArr => {\n      if (!imageInfoArr) return;\n      var imgInfo = imageInfoArr[0];\n      var imgInfoDiv = /*#__PURE__*/React.createElement(SingleImageInfo, {\n        source: imgInfo.IMAGE_SOURCE,\n        title: imgInfo.TITLE,\n        size: imgInfo.SIZES,\n        artist: imgInfo.AUTHOR,\n        date: imgInfo.CREATED_TIME,\n        technique: imgInfo.TECHNIQUE,\n        type: imgInfo.TYPE,\n        form: imgInfo.FORM,\n        school: imgInfo.SCHOOL,\n        location: imgInfo.LOCATION,\n        description: imgInfo.DESCRIPTION,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 24\n        }\n      });\n      this.setState({\n        imageInfoDiv: imgInfoDiv\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n    fetch(\"http://localhost:8081/populars/\" + this.props.match.params.imageID, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageList => {\n      if (!imageList) return;\n      let recImages = imageList.map((imgObj, i) => /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rec-img-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/singleimage/\" + imgObj.ID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 42\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        key: i,\n        src: imgObj.image_source,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 81\n        }\n      }))));\n      console.log(recImages);\n      this.setState({\n        recImagesDiv: recImages\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  toggleLike() {\n    var icon = this.state.likeState ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: ['far', 'heart'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 85\n      }\n    });\n    this.setState({\n      likeIcon: icon,\n      likeState: !this.state.likeState\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SideNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TopNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), this.state.imageInfoDiv, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rec-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \" Explore more artworks \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"rec-imgs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, this.state.recImagesDiv)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/huizehuang/Downloads/ArtsMuseum-master/client/src/components/SingleImage.js"],"names":["React","Link","FontAwesomeIcon","SideNavbar","TopNavbar","Footer","SingleImageInfo","SingleImage","Component","constructor","props","state","imageInfoDiv","recImagesDiv","fetchImages","bind","componentDidMount","componentDidUpdate","prevProps","match","params","imageID","fetch","method","then","res","json","err","console","log","imageInfoArr","imgInfo","imgInfoDiv","IMAGE_SOURCE","TITLE","SIZES","AUTHOR","CREATED_TIME","TECHNIQUE","TYPE","FORM","SCHOOL","LOCATION","DESCRIPTION","setState","imageList","recImages","map","imgObj","i","ID","image_source","toggleLike","icon","likeState","likeIcon","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/SingleImage.css\";\nimport {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\nimport SingleImageInfo from './SingleImageInfo'\n\nexport default class SingleImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n    this.state = {\n        imageInfoDiv:\"\",\n        recImagesDiv:[]\n    }\n\n    // Any instance method should be binded here\n    this.fetchImages = this.fetchImages.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchImages();\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.imageID !== prevProps.match.params.imageID) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages(){\n    fetch(\"http://localhost:8081/image/\"+this.props.match.params.imageID,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageInfoArr => {\n      if (!imageInfoArr) return;\n      var imgInfo = imageInfoArr[0];\n      var imgInfoDiv = <SingleImageInfo source={imgInfo.IMAGE_SOURCE} title={imgInfo.TITLE} size={imgInfo.SIZES}\n        artist={imgInfo.AUTHOR} date={imgInfo.CREATED_TIME} technique={imgInfo.TECHNIQUE} type={imgInfo.TYPE}\n        form={imgInfo.FORM} school={imgInfo.SCHOOL} location={imgInfo.LOCATION} description={imgInfo.DESCRIPTION}/>;\n\n      this.setState({\n        imageInfoDiv: imgInfoDiv\n      });\n\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n\n    fetch(\"http://localhost:8081/populars/\"+this.props.match.params.imageID,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageList => {\n      if (!imageList) return;\n\n      let recImages = imageList.map((imgObj, i) =>\n      <div className=\"rec-img-container\"><Link to={\"/singleimage/\" + imgObj.ID}><img key={i} src={imgObj.image_source} alt=\"\"/></Link></div>\n      );\n      console.log(recImages);\n\n      this.setState({\n        recImagesDiv:recImages\n      });\n\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  toggleLike(){\n    var icon = this.state.likeState ? <FontAwesomeIcon icon={['far', 'heart']} /> : <FontAwesomeIcon icon=\"heart\" />;\n    this.setState ({\n      likeIcon: icon,\n      likeState: !this.state.likeState\n    });\n  }\n\n  render() {\n\n    return (\n    <div>\n\n      <SideNavbar />\n\n\n      <div id=\"main\">\n\n        <TopNavbar/>\n\n        {this.state.imageInfoDiv}\n\n        <div className=\"rec-section\">\n          <h1> Explore more artworks </h1>\n\n          <div className=\"rec-imgs\">\n            {this.state.recImagesDiv}\n          </div>\n\n        </div>\n\n        <Footer />\n\n      </div>\n\n    </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}