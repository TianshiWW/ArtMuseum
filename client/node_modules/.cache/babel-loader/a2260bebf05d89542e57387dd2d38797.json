{"ast":null,"code":"var _jsxFileName = \"/Users/tianshiwang/Documents/550/Proj/project_int/client/src/components/Auth/Login.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container, Col, Form, FormGroup, Label, Input, Button, FormFeedback } from 'reactstrap';\nimport './Login.css';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = async event => {\n      const {\n        target\n      } = event;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const {\n        name\n      } = target;\n      await this.setState({\n        [name]: value\n      });\n    };\n\n    this.setRedirectToSign = () => {\n      this.setState({\n        pushToSignupPage: true\n      });\n    };\n\n    this.renderRedirectToSign = () => {\n      if (this.state.pushToSignupPage) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/WelcomePage\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 18\n          }\n        });\n      }\n    };\n\n    this.state = {\n      'email': '',\n      'password': '',\n      validate: {\n        emailState: ''\n      },\n      pushToSignupPage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.loginHandler = this.loginHandler.bind(this);\n  }\n\n  validateEmail(e) {\n    const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const {\n      validate\n    } = this.state;\n\n    if (emailRex.test(e.target.value)) {\n      validate.emailState = 'has-success';\n    } else {\n      validate.emailState = 'has-danger';\n    }\n\n    this.setState({\n      validate\n    });\n  }\n\n  loginHandler() {\n    axios.post('http://localhost:8081/users/login/', {\n      email: this.state.email,\n      password: this.state.password\n    }).then(response => {\n      console.log(response); // console.log(response.data.value);\n\n      if (response.data.status === true) {\n        this.props.handleSuccessfulAuth(response.data);\n      } else {\n        alert(\"Fail to loggin\");\n      }\n    }).catch(error => {});\n  }\n\n  submitForm(e) {\n    alert('A name was submitted: ' + this.state.email);\n    e.preventDefault();\n    console.log(`Email: ${this.state.email}`);\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setRedirectToSign,\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Try for free!\"), this.renderRedirectToSign()), /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: e => this.submitForm(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"Your email\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"myemail@email.com\",\n      value: email,\n      valid: this.state.validate.emailState === 'has-success',\n      invalid: this.state.validate.emailState === 'has-danger',\n      onChange: e => {\n        this.validateEmail(e);\n        this.handleChange(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"Please check your email.\"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"Password\")), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"********\",\n      value: password,\n      onChange: e => this.handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      onClick: e => {\n        this.loginHandler();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/tianshiwang/Documents/550/Proj/project_int/client/src/components/Auth/Login.js"],"names":["React","Component","Redirect","Container","Col","Form","FormGroup","Label","Input","Button","FormFeedback","axios","Login","constructor","props","handleChange","event","target","value","type","checked","name","setState","setRedirectToSign","pushToSignupPage","renderRedirectToSign","state","validate","emailState","bind","submitForm","loginHandler","validateEmail","e","emailRex","test","post","email","password","then","response","console","log","data","status","handleSuccessfulAuth","alert","catch","error","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport  { Redirect } from 'react-router-dom'\nimport {\n    Container, Col, Form,\n    FormGroup, Label, Input,\n    Button, FormFeedback,\n} from 'reactstrap';\nimport './Login.css';\nimport axios from 'axios';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'email': '',\n            'password': '',\n            validate: {\n                emailState: '',\n            },\n            pushToSignupPage : false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n        this.loginHandler = this.loginHandler.bind(this);\n    }\n\n    validateEmail(e) {\n        const emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const { validate } = this.state\n        if (emailRex.test(e.target.value)) {\n            validate.emailState = 'has-success'\n        } else {\n            validate.emailState = 'has-danger'\n        }\n        this.setState({ validate })\n    }\n\n    handleChange = async (event) => {\n        const { target } = event;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const { name } = target;\n        await this.setState({\n            [name]: value,\n        });\n    }\n\n    loginHandler() {\n\n        axios.post('http://localhost:8081/users/login/', { email: this.state.email, password: this.state.password })\n        .then(response => {\n            console.log(response);\n            // console.log(response.data.value);\n            if (response.data.status === true) {\n                this.props.handleSuccessfulAuth(response.data)\n            } else {\n                alert(\"Fail to loggin\");\n            }\n            \n        }).catch(error => {\n\n        });\n\n    }\n\n    submitForm(e) {\n        alert('A name was submitted: ' + this.state.email);\n        e.preventDefault();\n        console.log(`Email: ${this.state.email}`)\n    }\n\n    setRedirectToSign = () => {\n        this.setState({\n            pushToSignupPage: true\n        })\n      }\n\n    renderRedirectToSign = () => {\n        if (this.state.pushToSignupPage) {\n          return <Redirect to='/WelcomePage' />\n        }\n    }\n\n    render() {\n        const { email, password } = this.state;\n        return (\n            <Container className=\"Login\">\n                <h2>\n                    <p className=\"text-white\">\n                        Sign in\n                    </p>\n                    <Button onClick={this.setRedirectToSign} color=\"primary\" >Try for free!</Button>\n                    {this.renderRedirectToSign()}\n                </h2>\n\n                <Form className=\"form\" onSubmit={(e) => this.submitForm(e)}>\n                    <Col>\n                        <FormGroup>\n                            <Label>\n                                <p className=\"text-white\">\n                                    Your email\n                                </p>\n                            </Label>\n                            <Input\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"exampleEmail\"\n                                placeholder=\"myemail@email.com\"\n                                value={email}\n                                valid={this.state.validate.emailState === 'has-success'}\n                                invalid={this.state.validate.emailState === 'has-danger'}\n                                onChange={(e) => {\n                                    this.validateEmail(e)\n                                    this.handleChange(e)\n                                }}\n                            />\n\n                            <FormFeedback>\n                                Please check your email.\n                            </FormFeedback>\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <Label for=\"examplePassword\">\n                                <p className=\"text-white\">\n                                    Password\n                                </p>\n\n                            </Label>\n                            <Input\n                                type=\"password\"\n                                name=\"password\"\n                                id=\"examplePassword\"\n                                placeholder=\"********\"\n                                value={password}\n                                onChange={(e) => this.handleChange(e)}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Button className = \"button\"\n                        onClick={(e) => {\n                            this.loginHandler()\n                        }}>\n                        Login\n                    </Button>\n                </Form>\n                \n            </Container>\n        );\n    }\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}