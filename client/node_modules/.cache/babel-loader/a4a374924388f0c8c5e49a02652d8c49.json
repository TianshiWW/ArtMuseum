{"ast":null,"code":"var _jsxFileName = \"/Users/tianshiwang/Documents/550/Proj/Project/ArtsMuseum/client/src/components/Display.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/Display.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Link } from 'react-router-dom';\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\nexport default class Display extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n\n    this.state = {\n      imagesFirstColumn: [],\n      imagesSecondColumn: [],\n      currentKey: \"\",\n      currentValue: \"\"\n    }; // Any instance method should be binded here\n\n    this.createImageCols = this.createImageCols.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/images/\" + this.props.match.params.key + \"/\" + this.props.match.params.value, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      console.log(res);\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageList => {\n      if (!imageList) return;\n      this.createImageCols(imageList);\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.match.params.key !== prevProps.match.params.key || this.props.match.params.value !== prevProps.match.params.value) {\n      fetch(\"http://localhost:8081/images/\" + this.props.match.params.key + \"/\" + this.props.match.params.value, {\n        method: 'GET' // The type of HTTP request.\n\n      }).then(res => {\n        // Convert the response data to a JSON.\n        console.log(res);\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(imageList => {\n        if (!imageList) return;\n        this.createImageCols(imageList);\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    }\n  }\n\n  createImageCols(imageList) {\n    // Map each UrlObj in UrlList to an HTML element:\n    let imagesDiv = imageList.map((imgObj, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/singleimage/\" + imgObj.ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      key: i,\n      src: imgObj.IMAGE_SOURCE,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 75\n      }\n    }))));\n    var imagesCol1 = [];\n\n    for (var index = 0; index < imagesDiv.length / 2; index++) {\n      imagesCol1.push(imagesDiv[index]);\n    }\n\n    var imagesCol2 = [];\n\n    for (index = Math.floor(imagesDiv.length / 2); index < imagesDiv.length; index++) {\n      imagesCol2.push(imagesDiv[index]);\n    } // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n\n    this.setState({\n      imagesFirstColumn: imagesCol1,\n      imagesSecondColumn: imagesCol2,\n      currentKey: this.props.match.params.key,\n      currentValue: this.props.match.params.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SideNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TopNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"search-key\",\n      id: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, this.state.currentKey))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"search-value\",\n      id: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, this.state.currentValue)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"images-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, this.state.imagesFirstColumn), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, this.state.imagesSecondColumn)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tianshiwang/Documents/550/Proj/Project/ArtsMuseum/client/src/components/Display.js"],"names":["React","Row","Col","Link","SideNavbar","TopNavbar","Footer","Display","Component","constructor","props","state","imagesFirstColumn","imagesSecondColumn","currentKey","currentValue","createImageCols","bind","componentDidMount","fetch","match","params","key","value","method","then","res","console","log","json","err","imageList","componentDidUpdate","prevProps","imagesDiv","map","imgObj","i","ID","IMAGE_SOURCE","imagesCol1","index","length","push","imagesCol2","Math","floor","setState","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/Display.css\";\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {Link} from 'react-router-dom';\n\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\n\nexport default class Display extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n    this.state = {\n      imagesFirstColumn:[],\n      imagesSecondColumn:[],\n      currentKey:\"\",\n      currentValue: \"\"\n    }\n\n    // Any instance method should be binded here\n    this.createImageCols = this.createImageCols.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/images/\"+this.props.match.params.key + \"/\" + this.props.match.params.value,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      console.log(res);\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(imageList => {\n      if (!imageList) return;\n      this.createImageCols(imageList);\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if ((this.props.match.params.key !== prevProps.match.params.key) || (this.props.match.params.value !== prevProps.match.params.value)) {\n      fetch(\"http://localhost:8081/images/\"+this.props.match.params.key + \"/\" + this.props.match.params.value,\n      {\n        method: 'GET' // The type of HTTP request.\n      }).then(res => {\n        // Convert the response data to a JSON.\n        console.log(res);\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(imageList => {\n        if (!imageList) return;\n        this.createImageCols(imageList);\n\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    }\n  }\n\n  createImageCols(imageList){\n    // Map each UrlObj in UrlList to an HTML element:\n    let imagesDiv = imageList.map((imgObj, i) =>\n    <div className=\"img-container\"><Link to={\"/singleimage/\" + imgObj.ID}><img key={i} src={imgObj.IMAGE_SOURCE} alt=\"\"/></Link></div>\n    );\n    var imagesCol1 = [];\n    for (var index = 0; index < imagesDiv.length / 2; index++) {\n      imagesCol1.push(imagesDiv[index]);\n    }\n    var imagesCol2 = [];\n\n    for (index = Math.floor(imagesDiv.length / 2); index < imagesDiv.length; index++) {\n      imagesCol2.push(imagesDiv[index]);\n    }\n\n    // Set the state of the genres list to the value returned by the HTTP response from the server.\n    this.setState({\n      imagesFirstColumn: imagesCol1,\n      imagesSecondColumn: imagesCol2,\n      currentKey: this.props.match.params.key,\n      currentValue: this.props.match.params.value\n    });\n  }\n\n  render() {\n\n    return (\n    <div className=\"wrapper\">\n\n      <SideNavbar />\n\n\n      <div id=\"main\">\n\n        <TopNavbar />\n\n        <div className=\"intro\">\n\n          <Row>\n            <Col>\n              <h1 className=\"search-key\" id=\"intro\">{this.state.currentKey}</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h2 className=\"search-value\" id=\"intro\">{this.state.currentValue}</h2>\n            </Col>\n          </Row>\n\n        </div>\n\n        <div className=\"images-grid\">\n          <div className=\"column\">\n            {this.state.imagesFirstColumn}\n          </div>\n          <div className=\"column\">\n            {this.state.imagesSecondColumn}\n          </div>\n        </div>\n\n\n        <Footer />\n\n      </div>\n\n    </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}