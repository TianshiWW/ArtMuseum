{"ast":null,"code":"var _jsxFileName = \"/Users/huizehuang/Downloads/ArtsMuseum-master/client/src/components/Artist.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/Artist.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\nexport default class Artist extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n\n    this.state = {\n      imagesColumn: [],\n      currentLetter: \"\"\n    }; // Any instance method should be binded here\n\n    this.createImageCols = this.createImageCols.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/artists/\" + this.props.match.params.firstLetter, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      console.log(res);\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(artistList => {\n      if (!artistList) return;\n      this.createImageCols(artistList);\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.match.params.firstLetter !== prevProps.match.params.firstLetter) {\n      fetch(\"http://localhost:8081/artists/\" + this.props.match.params.firstLetter, {\n        method: 'GET' // The type of HTTP request.\n\n      }).then(res => {\n        // Convert the response data to a JSON.\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(artistList => {\n        if (!artistList) return;\n        this.createImageCols(artistList);\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    }\n  }\n\n  createImageCols(artistList) {\n    // Map each UrlObj in UrlList to an HTML element:\n    var background = {\n      backgroundSize: 'cover'\n    };\n    let artistsDiv = artistList.map((artistObj, i) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, artistObj.full_name)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/display/AUTHOR_ID/\" + artistObj.ID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      style: background,\n      responsive: true,\n      key: i,\n      src: artistObj.IMAGE_SOURCE,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 60\n      }\n    })))));\n    var imageCols = [];\n\n    for (var i = 0; i < 4; i++) {\n      var imageCol = [];\n      var colLength = Math.floor(artistsDiv.length / 4);\n\n      for (var index = i * colLength; index < i * colLength + colLength; index++) {\n        imageCol.push(artistsDiv[index]);\n      }\n\n      var colDiv = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }\n      }, \" \", imageCol, \" \");\n      imageCols.push(colDiv);\n    } // Set the state of the genres list to the value returned by the HTTP response from the server.\n\n\n    this.setState({\n      imagesColumn: imageCols,\n      firstLetter: this.props.match.params.firstLetter\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(SideNavbar, {\n      userID: this.props.user,\n      imageID: this.props.match.params.imageID,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TopNavbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"search-key\",\n      id: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"ARTIST\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"search-value\",\n      id: \"intro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, this.state.firstLetter)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"images-grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.state.imagesColumn), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/huizehuang/Downloads/ArtsMuseum-master/client/src/components/Artist.js"],"names":["React","Row","Col","Image","Link","SideNavbar","TopNavbar","Footer","Artist","Component","constructor","props","state","imagesColumn","currentLetter","createImageCols","bind","componentDidMount","fetch","match","params","firstLetter","method","then","res","console","log","json","err","artistList","componentDidUpdate","prevProps","background","backgroundSize","artistsDiv","map","artistObj","i","full_name","ID","IMAGE_SOURCE","imageCols","imageCol","colLength","Math","floor","length","index","push","colDiv","setState","render","user","imageID"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../style/Artist.css\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport {Image} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport SideNavbar from './SideNavbar';\nimport TopNavbar from './TopNavbar';\nimport Footer from './Footer';\n\nexport default class Artist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component.\n    // This component maintains a list of randomly picked paintings\n    this.state = {\n      imagesColumn:[],\n      currentLetter:\"\"\n    }\n\n    // Any instance method should be binded here\n    this.createImageCols = this.createImageCols.bind(this);\n  }\n\n  // React function that is called when the page load.\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/artists/\"+this.props.match.params.firstLetter,\n    {\n      method: 'GET' // The type of HTTP request.\n    }).then(res => {\n      // Convert the response data to a JSON.\n      console.log(res);\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(artistList => {\n      if (!artistList) return;\n      this.createImageCols(artistList);\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.match.params.firstLetter !== prevProps.match.params.firstLetter) {\n      fetch(\"http://localhost:8081/artists/\"+this.props.match.params.firstLetter,\n      {\n        method: 'GET' // The type of HTTP request.\n      }).then(res => {\n        // Convert the response data to a JSON.\n        return res.json();\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      }).then(artistList => {\n        if (!artistList) return;\n        this.createImageCols(artistList);\n\n      }, err => {\n        // Print the error if there is one.\n        console.log(err);\n      });\n    }\n  }\n\n  createImageCols(artistList){\n    // Map each UrlObj in UrlList to an HTML element:\n    var background = {backgroundSize : 'cover'};\n\n    let artistsDiv = artistList.map((artistObj, i) =>\n    <div className=\"img-wrap\">\n      {/* <div className=\"img-text\">{artistObj.full_name}</div> */}\n      <div className=\"img-text\"><h3>{artistObj.full_name}</h3></div>\n      <Row><Link to={\"/display/AUTHOR_ID/\" + artistObj.ID}><Image style={background} responsive key={i} src={artistObj.IMAGE_SOURCE} alt=\"\"></Image></Link></Row>\n\n    </div>\n    );\n\n    var imageCols = [];\n    for (var i = 0; i < 4; i++) {\n      var imageCol = [];\n      var colLength = Math.floor(artistsDiv.length / 4);\n      for (var index = i*colLength; index < i*colLength+colLength; index++) {\n        imageCol.push(artistsDiv[index]);\n      }\n      var colDiv = <div className=\"column-4\"> {imageCol} </div>\n      imageCols.push(colDiv)\n    }\n\n    // Set the state of the genres list to the value returned by the HTTP response from the server.\n    this.setState({\n      imagesColumn: imageCols,\n      firstLetter: this.props.match.params.firstLetter\n    });\n  }\n\n  render() {\n\n    return (\n    <div className=\"wrapper\">\n\n      <SideNavbar userID={this.props.user} imageID={this.props.match.params.imageID}/>\n\n\n      <div id=\"main\">\n\n        <TopNavbar />\n\n        <div className=\"intro\">\n\n          <Row>\n            <Col>\n              <h1 className=\"search-key\" id=\"intro\">ARTIST</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <h2 className=\"search-value\" id=\"intro\">{this.state.firstLetter}</h2>\n            </Col>\n          </Row>\n\n        </div>\n\n        <div className=\"images-grid\">\n          {this.state.imagesColumn}\n        </div>\n\n\n        <Footer />\n\n      </div>\n\n    </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}